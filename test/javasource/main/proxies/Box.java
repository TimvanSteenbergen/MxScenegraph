// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class Box extends main.proxies.Primitive
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.Box";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		w("w"),
		h("h"),
		d("d"),
		doublesided("doublesided"),
		Name("Name"),
		x("x"),
		y("y"),
		z("z"),
		rotx("rotx"),
		roty("roty"),
		rotz("rotz"),
		color("color"),
		Primitive_Node("Main.Primitive_Node"),
		Selected("Main.Selected"),
		Texture("Main.Texture");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Box(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.Box"));
	}

	protected Box(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject boxMendixObject)
	{
		super(context, boxMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Main.Box", boxMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.Box");
	}

	/**
	 * @deprecated Use 'Box.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static main.proxies.Box initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.Box.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static main.proxies.Box initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.Box(context, mendixObject);
	}

	public static main.proxies.Box load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.Box.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.Box> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.Box> result = new java.util.ArrayList<main.proxies.Box>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.Box" + xpathConstraint))
			result.add(main.proxies.Box.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of w
	 */
	public final java.lang.Double getw()
	{
		return getw(getContext());
	}

	/**
	 * @param context
	 * @return value of w
	 */
	public final java.lang.Double getw(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames.w.toString());
	}

	/**
	 * Set value of w
	 * @param w
	 */
	public final void setw(java.lang.Double w)
	{
		setw(getContext(), w);
	}

	/**
	 * Set value of w
	 * @param context
	 * @param w
	 */
	public final void setw(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double w)
	{
		getMendixObject().setValue(context, MemberNames.w.toString(), w);
	}

	/**
	 * @return value of h
	 */
	public final java.lang.Double geth()
	{
		return geth(getContext());
	}

	/**
	 * @param context
	 * @return value of h
	 */
	public final java.lang.Double geth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames.h.toString());
	}

	/**
	 * Set value of h
	 * @param h
	 */
	public final void seth(java.lang.Double h)
	{
		seth(getContext(), h);
	}

	/**
	 * Set value of h
	 * @param context
	 * @param h
	 */
	public final void seth(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double h)
	{
		getMendixObject().setValue(context, MemberNames.h.toString(), h);
	}

	/**
	 * @return value of d
	 */
	public final java.lang.Double getd()
	{
		return getd(getContext());
	}

	/**
	 * @param context
	 * @return value of d
	 */
	public final java.lang.Double getd(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Double) getMendixObject().getValue(context, MemberNames.d.toString());
	}

	/**
	 * Set value of d
	 * @param d
	 */
	public final void setd(java.lang.Double d)
	{
		setd(getContext(), d);
	}

	/**
	 * Set value of d
	 * @param context
	 * @param d
	 */
	public final void setd(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Double d)
	{
		getMendixObject().setValue(context, MemberNames.d.toString(), d);
	}

	/**
	 * @return value of doublesided
	 */
	public final java.lang.Boolean getdoublesided()
	{
		return getdoublesided(getContext());
	}

	/**
	 * @param context
	 * @return value of doublesided
	 */
	public final java.lang.Boolean getdoublesided(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.doublesided.toString());
	}

	/**
	 * Set value of doublesided
	 * @param doublesided
	 */
	public final void setdoublesided(java.lang.Boolean doublesided)
	{
		setdoublesided(getContext(), doublesided);
	}

	/**
	 * Set value of doublesided
	 * @param context
	 * @param doublesided
	 */
	public final void setdoublesided(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean doublesided)
	{
		getMendixObject().setValue(context, MemberNames.doublesided.toString(), doublesided);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.Box that = (main.proxies.Box) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.Box";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
