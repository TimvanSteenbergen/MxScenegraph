// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package fsutils.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class ja_unarc_zip extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private IMendixObject __obj_src;
	private system.proxies.FileDocument obj_src;
	private java.lang.String str_objtype;
	private java.lang.Boolean bool_txn;

	public ja_unarc_zip(IContext context, IMendixObject obj_src, java.lang.String str_objtype, java.lang.Boolean bool_txn)
	{
		super(context);
		this.__obj_src = obj_src;
		this.str_objtype = str_objtype;
		this.bool_txn = bool_txn;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		this.obj_src = __obj_src == null ? null : system.proxies.FileDocument.initialize(getContext(), __obj_src);

		// BEGIN USER CODE
		//java.util.List<com.mendix.systemwideinterfaces.core.IMendixObject> ret=new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixObject>();
		return this.unzip(
			obj_src.getMendixObject(),
			this.getContext(),
			bool_txn,
			str_objtype
		);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ja_unarc_zip";
	}

	// BEGIN EXTRA CODE

        private java.util.List<com.mendix.systemwideinterfaces.core.IMendixObject> unzip(
		com.mendix.systemwideinterfaces.core.IMendixObject obj_filedocument,
		com.mendix.systemwideinterfaces.core.IContext ctx,
		java.lang.Boolean txn,
		java.lang.String objType
	){
            txn=txn==null?false:txn;
            com.mendix.systemwideinterfaces.core.IContext _ctx=ctx;
            objType=objType==null?"System.FileDocument":objType;
            java.io.InputStream is=com.mendix.core.Core.getFileDocumentContent(ctx,obj_filedocument);
            java.util.List<com.mendix.systemwideinterfaces.core.IMendixObject> outList=new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixObject>();
	    try{
                java.io.InputStream inStream=com.mendix.core.Core.getFileDocumentContent(ctx,obj_filedocument);
				java.util.zip.ZipInputStream zipInStream = new java.util.zip.ZipInputStream(inStream);
				java.util.zip.ZipEntry entry;
				while((entry=zipInStream.getNextEntry())!=null){
					try{
						if(!entry.isDirectory()){
							java.io.ByteArrayOutputStream out=new java.io.ByteArrayOutputStream();
							org.apache.commons.io.IOUtils.copy(zipInStream,out);
							java.io.InputStream eis=new java.io.ByteArrayInputStream(out.toByteArray());
							java.io.InputStream unzippedFile=eis;
							if(txn)_ctx=ctx.getSession().createContext();
							if(txn)_ctx.startTransaction();
							com.mendix.systemwideinterfaces.core.IMendixObject o=com.mendix.core.Core.instantiate(_ctx,objType);
							o.setValue(_ctx,"Name",entry.getName());
							com.mendix.core.Core.storeFileDocumentContent(_ctx,o,unzippedFile);
							if(txn)_ctx.endTransaction();
							outList.add(o);
						}else{
							//do directory stuff here
						}
					}catch(Exception e){
					    com.mendix.core.Core.getLogger(this.toString()).error(e);
					}
				}
		    }catch(Exception e){
		        com.mendix.core.Core.getLogger(this.toString()).error(e);
		    }
		    return outList;
	}
	// END EXTRA CODE
}
